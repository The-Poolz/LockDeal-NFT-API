using System.Numerics;
using MetaDataAPI.Utils;
using Nethereum.Hex.HexTypes;
using Newtonsoft.Json.Linq;

namespace MetaDataAPI.Tests.Helpers;

internal static class HttpMock
{
    internal static string RpcUrl => "https://localhost:5050";

    internal static string DealMetadata => "0x0000000000000000000000002028c98ac1702e2bb934a3e88734ccae42d44338000000000000000000000000000000000000000000000000000000000000000000000000000000000000000057e0433551460e85dfc5a5ddaff4db199d0f960a00000000000000000000000066134461c865f824d294d8ca0d9080cc1acd05f600000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000";
    internal static string LockMetadata => "0x000000000000000000000000d5df3f41cc1df2cc42f3b683dd71ecc38913e0d6000000000000000000000000000000000000000000000000000000000000000100000000000000000000000057e0433551460e85dfc5a5ddaff4db199d0f960a00000000000000000000000066134461c865f824d294d8ca0d9080cc1acd05f600000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000064bfb884";
    internal static string TimedMetadata => "0x0000000000000000000000005c0cb6dd68102f51dc112c3cec1c7090d27853bc00000000000000000000000000000000000000000000000000000000000000020000000000000000000000006063fba0fbd645d648c129854cce45a70dd8969100000000000000000000000066134461c865f824d294d8ca0d9080cc1acd05f600000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000003820000000000000000000000000000000000000000000000000000000064bfb8840000000000000000000000000000000000000000000000000000000064c13b8600000000000000000000000000000000000000000000000000000000000003b6";

    internal static string DealRequest => CreateRpcRequest(new BigInteger(0));
    internal static string LockRequest => CreateRpcRequest(new BigInteger(1));
    internal static string TimedRequest => CreateRpcRequest(new BigInteger(2));

    internal static string DealResponse => CreateRpcResponse(DealMetadata);
    internal static string LockResponse => CreateRpcResponse(LockMetadata);
    internal static string TimedResponse => CreateRpcResponse(TimedMetadata);

    private static string CreateRpcResponse(string metadata) => new JObject
    {
        { "result", metadata }
    }.ToString();

    private static string CreateRpcRequest(BigInteger poolId) => new JObject
    {
        { "jsonrpc", "2.0" },
        { "method", "eth_call" },
        { "params", new JArray 
            {
                new JObject
                {
                    { "to", Environments.LockDealNftAddress },
                    { "data", RpcCaller.MethodSignature + new HexBigInteger(poolId).HexValue[2..].PadLeft(64, '0') }
                },
                "latest"
            }
        },
        { "id", 0 }
    }.ToString();
}